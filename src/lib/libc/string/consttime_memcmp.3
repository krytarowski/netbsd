.\"	$NetBSD: $
.\"
.\" Copyright (c) 2015 The NetBSD Foundation, Inc.
.\" All rights reserved.
.\"
.\" This documentation is derived from text contributed to The NetBSD
.\" Foundation by Taylor R. Campbell.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
.\" ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
.\" TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
.\" BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.\" Created by Kamil Rytarowski, based on ID:
.\" NetBSD: consttime_memequal.3,v 1.4 2014/11/14 22:46:34 wiz Exp
.\"
.Dd March 15, 2015
.Dt CONSTTIME_MEMCMP 3
.Os
.Sh NAME
.Nm consttime_memcmp
.Nd compare byte strings without timing leaks
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In string.h
.Ft int
.Fn consttime_memcmp "void *b1" "void *b2" "size_t len"
.Sh DESCRIPTION
The
.Fn consttime_memcmp
function
compares byte string
.Fa b1
against byte string
.Fa b2 .
Both strings are assumed to be
.Fa len
bytes long.
.Pp
The time taken by
.Fn consttime_memcmp
depends on
.Fa len ,
but not on the data at
.Fa b1
or
.Fa b2 .
Thus,
.Fn consttime_memcmp
is appropriate for comparing cryptographic secrets, hashes, message
authentication codes, etc., without leaking information about them
through a timing side channel.
In crypto literature,
.Fn consttime_memcmp
is said to take
.Sq constant time ,
meaning time that does not vary depending on the data it processes.
.Pp
Note that unlike
.Xr consttime_memequal 3 ,
.Fn consttime_memcmp
returns a lexicographic ordering on the data at
.Fa b1
and   
.Fa b2 .
.Sh RETURN VALUES
The
.Fn consttime_memcmp
function
returns zero if the two strings are identical,
otherwise returns the difference between the first two differing bytes
(treated as unsigned char values, so that
.Sq Li \e200
is greater than
.Sq Li \&\e0 ,
for example).
Zero-length strings are always identical.
.Sh SEE ALSO
.Xr consttime_memequal 3 ,
.Xr explicit_memset 3 ,
.Xr memcmp 3
.Sh HISTORY
The
.Fn timingsafe_memcmp
function appeared in
.Ox 5.6
and was imported under the new name
.Fn consttime_memcmp
into
.Nx 8.0 .
