XCOMM $XFree86: xc/lib/GL/glx/Imakefile,v 1.31 2005/03/01 03:48:49 dawes Exp $
XCOMM The contents of this file are subject to the GLX Public License Version 1.0
XCOMM (the "License"). You may not use this file except in compliance with the
XCOMM License. You may obtain a copy of the License at Silicon Graphics, Inc.,
XCOMM attn: Legal Services, 2011 N. Shoreline Blvd., Mountain View, CA 94043
XCOMM or at http://www.sgi.com/software/opensource/glx/license.html.
XCOMM
XCOMM Software distributed under the License is distributed on an "AS IS"
XCOMM basis. ALL WARRANTIES ARE DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY
XCOMM IMPLIED WARRANTIES OF MERCHANTABILITY, OF FITNESS FOR A PARTICULAR
XCOMM PURPOSE OR OF NON- INFRINGEMENT. See the License for the specific
XCOMM language governing rights and limitations under the License.
XCOMM
XCOMM The Original Software is GLX version 1.2 source code, released February,
XCOMM 1999. The developer of the Original Software is Silicon Graphics, Inc.
XCOMM Those portions of the Subject Software created by Silicon Graphics, Inc.
XCOMM are Copyright (c) 1991-9 Silicon Graphics, Inc. All Rights Reserved.

/*
 * Copyright (c) 2000-2004 by The XFree86 Project, Inc.
 * All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject
 * to the following conditions:
 *
 *   1.  Redistributions of source code must retain the above copyright
 *       notice, this list of conditions, and the following disclaimer.
 *
 *   2.  Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer
 *       in the documentation and/or other materials provided with the
 *       distribution, and in the same place and form as other copyright,
 *       license and disclaimer information.
 *
 *   3.  The end-user documentation included with the redistribution,
 *       if any, must include the following acknowledgment: "This product
 *       includes software developed by The XFree86 Project, Inc
 *       (http://www.xfree86.org/) and its contributors", in the same
 *       place and form as other third-party acknowledgments.  Alternately,
 *       this acknowledgment may appear in the software itself, in the
 *       same form and location as other such third-party acknowledgments.
 *
 *   4.  Except as contained in this notice, the name of The XFree86
 *       Project, Inc shall not be used in advertising or otherwise to
 *       promote the sale, use or other dealings in this Software without
 *       prior written authorization from The XFree86 Project, Inc.
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE XFREE86 PROJECT, INC OR ITS CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
 * OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
 * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
 * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
#include <Threads.tmpl>

#define DoNormalLib (NormalLibGlx || SharedLibGlxWithoutPIC)
#define DoSharedLib (SharedLibGlx && !SharedLibGlxWithoutPIC)
#define DoExtraLib ExtraLibGlx
#define DoDebugLib DebugLibGlx
#define DoProfileLib ProfileLibGlx

XCOMM #define IHaveSubdirs
XCOMM #define PassCDebugFlags 'CDEBUGFLAGS=$(CDEBUGFLAGS)'
XCOMM 
XCOMM SUBDIRS = \
XCOMM 	glu \
XCOMM 	glw

#define LargePICTable YES

/* Files from Mesa */

LinkSourceFile(glapi.c, $(MESASRCDIR)/src/mesa/glapi)
LinkSourceFile(glthread.c, $(MESASRCDIR)/src/mesa/glapi)
LinkSourceFile(glcontextmodes.c, $(MESASRCDIR)/src/mesa/drivers/dri/common)
LinkSourceFile(glcontextmodes.h, $(MESASRCDIR)/src/mesa/drivers/dri/common)

#ifdef i386Architecture
LinkSourceFile(glapi_x86.S, $(MESASRCDIR)/src/mesa/x86)
#endif
#ifdef SparcArchitecture
LinkSourceFile(glapi_sparc.S, $(MESASRCDIR)/src/mesa/sparc)
#endif

/*
 * Maybe some of these could come from
 * xc/extras/ogl-sample/main/glx/lib at some point.
 */
     GLX_SRCS = \
		clientattrib.c \
		compsize.c \
		dispatch.c \
		eval.c \
		g_render.c \
		g_single.c \
		g_vendpriv.c \
		glapi.c \
		glthread.c \
		glxcmds.c \
		glxext.c \
		glxextensions.c \
		glcontextmodes.c \
		indirect_init.c \
		pixel.c \
		pixelstore.c \
		render2.c \
		renderpix.c \
		single2.c \
		singlepix.c \
		vertarr.c \
		xfont.c \
		glx_pbuffer.c \
		glx_query.c \
		glx_texture_compression.c

     GLX_OBJS = \
		clientattrib.o \
		compsize.o \
		dispatch.o \
		eval.o \
		g_render.o \
		g_single.o \
		g_vendpriv.o \
		glapi.o \
		glthread.o \
		glxcmds.o \
		glxext.o \
		glxextensions.o \
		glcontextmodes.o \
		indirect_init.o \
		pixel.o \
		pixelstore.o \
		render2.o \
		renderpix.o \
		single2.o \
		singlepix.o \
		vertarr.o \
		xfont.o \
		glx_pbuffer.o \
		glx_query.o \
		glx_texture_compression.o

     GLX_DEFS = GlxDefines VidModeExtensionDefines \
	        -DDEFAULT_DRIVER_DIR=\"$(MODULEDIR)/dri\"

#ifdef i386Architecture
      ASM_DIR = x86
#endif
#ifdef SparcArchitecture
      ASM_DIR = sparc
#endif

#if BuildXF86DRI
     DRI_SRCS = dri_glx.c XF86dri.c
     DRI_OBJS = dri_glx.o XF86dri.o

     DRI_INCS = -I$(SERVERSRC)/GL/dri
#if defined(i386Architecture) && MesaUseX86Asm
     ASM_SRCS = glapi_x86.S
     ASM_OBJS = glapi_x86.o
     ASM_DEFS = -DUSE_X86_ASM
#endif
#if defined(SparcArchitecture)
     ASM_SRCS = glapi_sparc.S
     ASM_OBJS = glapi_sparc.o
     ASM_DEFS = -DUSE_SPARC_ASM
#endif

#if GlxBuiltInXMesa
  XMESA_DEFINES = -DGLX_BUILT_IN_XMESA
#endif
#endif

#if defined(DarwinArchitecture) || defined(OS2Architecture) || \
defined(LynxOSArchitecture)
ALIAS_DEFINES = -DGLX_ALIAS_UNSUPPORTED
#endif
#if defined(DarwinArchitecture) && BuildAppleDRI
     DRI_SRCS = XF86dri.c
     DRI_OBJS = XF86dri.o

     DRI_INCS = -I$(SERVERSRC)/GL/dri
#endif

         SRCS = $(GLX_SRCS) $(ASM_SRCS) $(DRI_SRCS)
         OBJS = $(GLX_OBJS) $(ASM_OBJS) $(DRI_OBJS)
      DEFINES = $(GLX_DEFS) $(ASM_DEFS) $(XMESA_DEFINES) $(ALIAS_DEFINES) \
	        $(THREADS_DEFINES)

     INCLUDES = -I$(XINCLUDESRC) \
		-I$(MESASRCDIR)/include \
		-I$(EXTINCSRC) \
		-I$(GLXLIBSRC)/glx \
		-I$(MESASRCDIR)/src/mesa/main \
		-I$(MESASRCDIR)/src/mesa/glapi \
		-I$(MESASRCDIR)/src/mesa/drivers/x11 \
		-I$(MESASRCDIR)/src/mesa/$(ASM_DIR) \
		-I$(XF86OSSRC) \
		-I$(DRMINCLUDESDIR) \
		$(DRI_INCS)

#include <Library.tmpl>

LibraryObjectRule()

#if BuildXF86DRI && defined(i386Architecture) && MesaUseX86Asm
ObjectFromAsmSource(glapi_x86, NullParameter)
#endif
#if BuildXF86DRI && defined(SparcArchitecture)
STD_CPP_DEFINES = StandardDefines $(PROJECT_DEFINES)
ObjectFromAsmSource(glapi_sparc, NullParameter)
#endif

SubdirLibraryRule($(OBJS))
NormalLintTarget($(SRCS))

DependTarget()
