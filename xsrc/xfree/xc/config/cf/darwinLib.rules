XCOMM $XFree86: xc/config/cf/darwinLib.rules,v 1.13 2004/04/23 17:56:04 torrey Exp $
/*
 * Darwin/Mac OS X shared library rules
 */

#ifndef UseElfFormat
#define UseElfFormat NO
#endif
#ifndef HasSharedLibraries
#define HasSharedLibraries YES
#endif
#ifndef ForceNormalLib
#define ForceNormalLib YES
#endif

#ifndef SharedDataSeparation
#define SharedDataSeparation NO
#endif
#ifndef SharedCodeDef
#define SharedCodeDef /**/
#endif
#ifndef SharedLibraryDef
#define SharedLibraryDef /**/
#endif
#ifndef ShLibIncludeFile
#define ShLibIncludeFile <darwinLib.tmpl>
#endif
#ifndef SharedLibraryLoadFlags
#define SharedLibraryLoadFlags -dynamiclib
#endif
#ifndef PositionIndependentCFlags
#define PositionIndependentCFlags -dynamic
#endif
#ifndef ExtraLoadFlags
#define ExtraLoadFlags /**/
#endif

#ifndef SetMajorRev
#define SetMajorRev(rev) set +e; MAJREV=`expr rev : '\([0-9]*\)'`; set -e
#endif

/*
 * InstallSharedLibrary - generate rules to install the shared library.
 */
#ifndef InstallSharedLibrary
#define InstallSharedLibrary(libname,rev,dest)				@@\
install::								@@\
	MakeDir($(DESTDIR)dest)						@@\
	$(INSTALL) $(INSTALLFLAGS) $(INSTLIBFLAGS) Concat($(LIBPREFIX),libname.rev.dylib) $(DESTDIR)dest @@\
	@SetMajorRev(rev); \						@@\
	  if [ rev != $$MAJREV ]; then (set -x; \			@@\
	    $(RM) Concat($(DESTDIR)dest/$(LIBPREFIX),libname.$$MAJREV.dylib) && \ @@\
	    $(LN) Concat($(LIBPREFIX),libname.rev.dylib) Concat($(DESTDIR)dest/$(LIBPREFIX),libname.$$MAJREV.dylib)); fi @@\
	@if $(SOSYMLINK); then (set -x; \				@@\
	  $(RM) Concat($(DESTDIR)dest/$(LIBPREFIX),libname.dylib); \	@@\
	  $(LN) Concat($(LIBPREFIX),libname.rev.dylib) Concat($(DESTDIR)dest/$(LIBPREFIX),libname.dylib)); fi
#endif /* InstallSharedLibrary */

/*
 * SharedLibraryTarget - generate rules to create a shared library;
 * build it into a different name so that we do not hose people by having
 * the library gone for long periods.
 */
#ifndef SharedLibraryTarget
# define SharedLibraryTarget(libname,rev,solist,down,up)		@@\
AllTarget(Concat($(LIBPREFIX),libname.rev.dylib))			@@\
									@@\
Concat($(LIBPREFIX),libname.rev.dylib):  solist $(EXTRALIBRARYDEPS)	@@\
	$(RM) $@~							@@\
	@SetMajorRev(rev); \						@@\
	  INSTALLNAME=Concat($(LIBPREFIX),libname.$$MAJREV.dylib); \	@@\
	  (set -x; cd down; $(CC) -o up/$@~ $(SHLIBLDFLAGS) -install_name $(USRLIBDIR)/$$INSTALLNAME -current_version rev -compatibility_version rev solist $(REQUIREDLIBS)); \ @@\
	  if [ $$INSTALLNAME != $@ ]; then (set -x; \			@@\
	    $(RM) $$INSTALLNAME; $(LN) $@ $$INSTALLNAME); fi; \		@@\
	  LinkBuildSonameLibrary($$INSTALLNAME)				@@\
	$(RM) $@							@@\
	$(MV) $@~ $@							@@\
	@if $(SOSYMLINK); then (set -x; \				@@\
	  $(RM) Concat($(LIBPREFIX),libname.dylib); \			@@\
	  $(LN) $@ Concat($(LIBPREFIX),libname.dylib)); fi		@@\
	LinkBuildLibrary($@)						@@\
	LinkBuildLibraryMaybe(Concat($(LIBPREFIX),libname.dylib),$(SOSYMLINK)) @@\
									@@\
clean::									@@\
	@SetMajorRev(rev); \						@@\
	set -x; $(RM) Concat($(LIBPREFIX),libname.$$MAJREV.dylib)	@@\
	$(RM) Concat($(LIBPREFIX),libname.rev.dylib) Concat($(LIBPREFIX),libname.dylib)

#endif /* SharedLibraryTarget */

/*
 * SharedDepLibraryTarget - generate rules to create a shared library.
 */
#ifndef SharedDepLibraryTarget
# define SharedDepLibraryTarget(libname,rev,deplist,solist,down,up)	@@\
AllTarget(Concat($(LIBPREFIX),libname.rev.dylib))			@@\
									@@\
Concat($(LIBPREFIX),libname.rev.dylib):  deplist $(EXTRALIBRARYDEPS)	@@\
	$(RM) $@~							@@\
	@SetMajorRev(rev); \						@@\
	  INSTALLNAME=Concat($(LIBPREFIX),libname.$$MAJREV.dylib); \	@@\
	  (set -x; cd down; $(CC) -o up/$@~ $(SHLIBLDFLAGS) -install_name $(USRLIBDIR)/$$INSTALLNAME -current_version rev -compatibility_version rev solist $(REQUIREDLIBS)); \ @@\
	  if [ $$INSTALLNAME != $@ ]; then (set -x; \			@@\
	    $(RM) $$INSTALLNAME; $(LN) $@ $$INSTALLNAME); fi; \		@@\
	  LinkBuildSonameLibrary($$INSTALLNAME)				@@\
	$(RM) $@							@@\
	$(MV) $@~ $@							@@\
	@if $(SOSYMLINK); then (set -x; \				@@\
	  $(RM) Concat($(LIBPREFIX),libname.dylib); \			@@\
	  $(LN) $@ Concat($(LIBPREFIX),libname.dylib)); fi		@@\
	LinkBuildLibrary($@)						@@\
	LinkBuildLibraryMaybe(Concat($(LIBPREFIX),libname.dylib),$(SOSYMLINK)) @@\
									@@\
clean::									@@\
	@SetMajorRev(rev); \						@@\
	set -x; $(RM) Concat($(LIBPREFIX),libname.$$MAJREV.dylib)	@@\
	$(RM) Concat($(LIBPREFIX),libname.rev.dylib) Concat($(LIBPREFIX),libname.dylib)

#endif /* SharedDepLibraryTarget */

/*
 * SharedDepCplusplusLibraryTarget - generate rules to create a shared library.
 */
#ifndef SharedDepCplusplusLibraryTarget
# define SharedDepCplusplusLibraryTarget(libname,rev,deplist,solist,down,up)	@@\
AllTarget(Concat($(LIBPREFIX),libname.rev.dylib))			@@\
									@@\
Concat($(LIBPREFIX),libname.rev.dylib):  deplist $(EXTRALIBRARYDEPS)	@@\
	$(RM) $@~							@@\
	@SetMajorRev(rev); \						@@\
	  INSTALLNAME=Concat($(LIBPREFIX),libname.$$MAJREV.dylib); \	@@\
	  (set -x; cd down; $(CXX) -o up/$@~ $(SHLIBLDFLAGS) -install_name $(USRLIBDIR)/$$INSTALLNAME -current_version rev -compatibility_version rev solist $(REQUIREDLIBS)); \ @@\
	  if [ $$INSTALLNAME != $@ ]; then (set -x; \			@@\
	    $(RM) $$INSTALLNAME; $(LN) $@ $$INSTALLNAME); fi; \		@@\
	  LinkBuildSonameLibrary($$INSTALLNAME)				@@\
	$(RM) $@							@@\
	$(MV) $@~ $@							@@\
	@if $(SOSYMLINK); then (set -x; \				@@\
	  $(RM) Concat($(LIBPREFIX),libname.dylib); \			@@\
	  $(LN) $@ Concat($(LIBPREFIX),libname.dylib)); fi		@@\
	LinkBuildLibrary($@)						@@\
	LinkBuildLibraryMaybe(Concat($(LIBPREFIX),libname.dylib),$(SOSYMLINK)) @@\
									@@\
clean::									@@\
	@SetMajorRev(rev); \						@@\
	set -x; $(RM) Concat($(LIBPREFIX),libname.$$MAJREV.dylib)	@@\
	$(RM) Concat($(LIBPREFIX),libname.rev.dylib) Concat($(LIBPREFIX),libname.dylib)

#endif /* SharedDepCplusplusLibraryTarget */

#ifndef SharedDepModuleTarget
#define SharedDepModuleTarget(name,deps,solist)				@@\
AllTarget(name)								@@\
									@@\
name: deps								@@\
	$(RM) $@~							@@\
	$(CC) -o $@~ $(SHLIBLDFLAGS) solist $(REQUIREDLIBS)		@@\
	$(RM) $@							@@\
	$(MV) $@~ $@							@@\
									@@\
clean::									@@\
	$(RM) name

#endif /* SharedDepModuleTarget */

/*
 * SharedLibraryDataTarget - generate rules to create shlib data file;
 */
#ifndef SharedLibraryDataTarget
#define SharedLibraryDataTarget(libname,rev,salist)
#endif /* SharedLibraryDataTarget */

#ifndef InstallSharedLibraryData
#define InstallSharedLibraryData(libname,rev,dest)
#endif /* InstallSharedLibraryData */
