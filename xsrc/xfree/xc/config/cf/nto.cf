/* $XFree86: xc/config/cf/nto.cf,v 1.5 2004/06/02 22:42:53 dawes Exp $ */
/* Get X to build using the gcc toolchain, self hosted RTP x86 */
/* Let us try to separate the x86 stuff out of here as well... */ 

/*
 * Copyright (c) 1994-2004 by The XFree86 Project, Inc.
 * All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject
 * to the following conditions:
 *
 *   1.  Redistributions of source code must retain the above copyright
 *       notice, this list of conditions, and the following disclaimer.
 *
 *   2.  Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer
 *       in the documentation and/or other materials provided with the
 *       distribution, and in the same place and form as other copyright,
 *       license and disclaimer information.
 *
 *   3.  The end-user documentation included with the redistribution,
 *       if any, must include the following acknowledgment: "This product
 *       includes software developed by The XFree86 Project, Inc
 *       (http://www.xfree86.org/) and its contributors", in the same
 *       place and form as other third-party acknowledgments.  Alternately,
 *       this acknowledgment may appear in the software itself, in the
 *       same form and location as other such third-party acknowledgments.
 *
 *   4.  Except as contained in this notice, the name of The XFree86
 *       Project, Inc shall not be used in advertising or otherwise to
 *       promote the sale, use or other dealings in this Software without
 *       prior written authorization from The XFree86 Project, Inc.
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE XFREE86 PROJECT, INC OR ITS CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
 * OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
 * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
 * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/* don't want to conflict with QSSL's Xphoton in /usr/X11R6 */
#define ProjectRoot		/opt/X11R6


#ifndef OSName
#define OSName 			QNX6/Neutrino
#endif

#ifndef OSVendor
#define OSVendor		QNX Corp.
#endif
#ifndef OSMajorVersion
#define OSMajorVersion		6
#endif
#ifndef OSMinorVersion
#define OSMinorVersion		1
#endif

#if defined(i386Architecture)
#define BuildServer 		YES
#else
#define BuildServer		NO
#endif

#define DoLoadableServer	YES

#define BourneShell		/bin/sh
#define OSDefines		-DNO_REGEX -DSTRINGS_ALIGNED
#define XawI18nDefines		-DUSE_XWCHAR_STRING -DUSE_XMBTOWC
#define StripInstalledPrograms	NO
#define BuildLBX		YES 
#define ForceNormalLib		YES

#define SourceDefines		-D_POSIX_SOURCE -D_QNX_SOURCE
#define CrossCompiling		NO
#define DoRanlibCmd 		YES
#define GccUsesGas		YES
#define MkdirHierCmd		mkdir -p

#ifdef UseInstalled
#define InstallCmd		install
#else
#define InstallCmd		$(SHELL) $(CONFIGSRC)/util/install.sh
#endif
#define DefaultCCOptions	
#define LibraryCCOptions
#define ServerCCOptions		
#define LocalLibraries
#define CLibrary
#define PosixLibraries
#define ConnectionFlags 	-DTCPCONN 

#define StandardCppDefines	-traditional StandardDefines
#define PreProcessCmd		CppCmd

#define HasShm			NO    /* For now as well */
#define HasSockets		YES
#define HasPutenv		YES
#define HasCbrt			NO
#define HasShadowPasswd		YES
#define HasSnprintf		YES
#define HasBSD44Sockets		YES

#define BuildHtmlManPages	NO /* We don't want HTML manpages */

#define AvoidNullMakeCommand    YES
#define CompressAllFonts        YES
#define Malloc0ReturnsNull      YES
#define NeedConstPrototypes     YES
#define NeedFunctionPrototypes  YES
#define NeedNestedPrototypes    YES
#define NeedVarargsPrototypes   YES
#define OptimizedCDebugFlags	-O2
#define DefaultCDebugFlags	-O2

#ifndef NeedWidePrototypes
#define NeedWidePrototypes      NO
#endif

#define YaccCmd			bison -y
#define LexCmd			flex -l
#define LexLib			-lfl
#define TermcapLibrary		-lncurses
#ifndef UseStaticTermcapLib
#define UseStaticTermcapLib     NO
#endif

/* Here, we put in the #defines which are CPU-specific */
/* Note that the full paths to the tools will go away when self-hosted */

#ifdef i386Architecture
#define BootstrapCFlags		-D__QNXNTO__ -Di386
#define OSDefines		-DNO_REGEX -DSTRINGS_ALIGNED 
#define NTODefines		-D__i386__ -D__ELF__ -D__QNXNTO__ -D_i386
#define CcCmd			gcc
#define CplusplusCmd		g++ -fhonor-std -fno-builtin
#define ArCmd			ar cq
#define LdCmd			ld
#define AsCmd			as
#define RanlibCmd		ranlib
#define CppCmd			/usr/bin/cpp
/* do this until NTO's cpp can support -undef in the future */
#define RawCppCmd CppCmd -Uunix -Ui386
#define AsmDefines		-DUSE_GAS -D__ELF__ -D__QNXNTO__
#define ExtraLibraries		-lsocket
#endif

/* MIPS architecture */
#ifdef mipsArchitecture
#define BootstrapCFlags		-D__QNXNTO__ -DMIPS
#define OSDefines		-DNO_REGEX -DSTRINGS_ALIGNED
#define NTODefines		-D__MIPS__ -D__ELF__ -D__QNXNTO__
#define CcCmd			/usr/gcc/ntomips/bin/gcc -bntomips -EL
#define ArCmd			/usr/gcc/bin/ar cq
#define LdCmd			/usr/gcc/bin/ld
#define AsCmd			/usr/gcc/ntomips/bin/as
#define RanlibCmd		/usr/gcc/bin/ranlib
#define AsmDefines		-DUSE_GAS -D__ELF__ -D__QNXNTO__
#define ExtraLibraries		-lsocket 
#endif

/* Power PC support */
#ifdef PPCArchitecture
#define BootstrapCFlags		-D__QNXNTO__ -DPPC
#define OSDefines		-DNO_REGEX -DSTRINGS_ALIGNED
#define NTODefines		-D__PPC__ -D__ELF__ -D__QNXNTO__
#define CcCmd			/usr/gcc/ntoppc/bin/gcc -bntoppc
#define ArCmd			/usr/gcc/bin/ar cq
#define LdCmd			/usr/gcc/bin/ld
#define AsCmd			/usr/gcc/ntoppc/bin/as
#define RanlibCmd		/usr/gcc/bin/ranlib
#define AsmDefines		-DUSE_GAS -D__ELF__ -D__QNXNTO__
#define ExtraLibraries		-lsocket
#endif


#define StandardDefines OSDefines SourceDefines NTODefines
#define ServerOSDefines XFree86ServerOSDefines 
#define ServerExtraDefines XFree86ServerDefines
#define ExtraFilesToClean       *.err *.map 

#include <nto.rules>
#include <xfree86.cf>

