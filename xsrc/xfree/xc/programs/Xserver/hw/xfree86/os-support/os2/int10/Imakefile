XCOMM $XFree86: xc/programs/Xserver/hw/xfree86/os-support/os2/int10/Imakefile,v 1.4 2004/11/10 04:28:38 dawes Exp $
/*
 * Copyright (c) 1994-2004 by The XFree86 Project, Inc.
 * All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject
 * to the following conditions:
 *
 *   1.  Redistributions of source code must retain the above copyright
 *       notice, this list of conditions, and the following disclaimer.
 *
 *   2.  Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer
 *       in the documentation and/or other materials provided with the
 *       distribution, and in the same place and form as other copyright,
 *       license and disclaimer information.
 *
 *   3.  The end-user documentation included with the redistribution,
 *       if any, must include the following acknowledgment: "This product
 *       includes software developed by The XFree86 Project, Inc
 *       (http://www.xfree86.org/) and its contributors", in the same
 *       place and form as other third-party acknowledgments.  Alternately,
 *       this acknowledgment may appear in the software itself, in the
 *       same form and location as other such third-party acknowledgments.
 *
 *   4.  Except as contained in this notice, the name of The XFree86
 *       Project, Inc shall not be used in advertising or otherwise to
 *       promote the sale, use or other dealings in this Software without
 *       prior written authorization from The XFree86 Project, Inc.
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE XFREE86 PROJECT, INC OR ITS CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
 * OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
 * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
 * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#define IHaveModules

#include <Server.tmpl>

SRCS1 = pci.c xf86int10module.c helper_exec.c helper_mem.c xf86int10.c 
OBJS1 = pci.o xf86int10module.o helper_exec.o helper_mem.o xf86int10.o 

LinkSourceFile(helper_mem.c,$(XF86SRC)/int10)
LinkSourceFile(helper_exec.c,$(XF86SRC)/int10)
LinkSourceFile(xf86int10.c,$(XF86SRC)/int10)
LinkSourceFile(pci.c,$(XF86SRC)/int10)
LinkSourceFile(xf86int10module.c,$(XF86SRC)/int10)
LinkSourceFile(xf86x86emu.c,$(XF86SRC)/int10)
LinkSourceFile(generic.c,$(XF86SRC)/int10)

INCLUDES = -I. -I$(XF86COMSRC) -I$(XF86SRC)/int10 \
           -I$(XF86OSSRC) \
           -I$(SERVERSRC)/include -I$(XINCLUDESRC)

#if 0
/* debugging stuff */
#DEFINES =-D_PC
#undef XF86INT10_BUILD 
#define XF86INT10_BUILD X86EMU_GENERIC
#define X86EMU_LIBPATH /usr/local/lib
#endif

#if defined(i386Architecture)
DEFINES =-D_PC
#endif

/* XXX keep this temporarily for reference */
#if 0
#if (XF86INT10_BUILD == X86EMU_GENERIC) 

SRCS = $(SRCS1) xf86x86emu.c generic.c
OBJS = $(OBJS1) xf86x86emu.o generic.o x86emu.o
SpecialObjectRule(pci.o, pci.c, -D_X86EMU)
SpecialObjectRule(helper_exec.o, helper_exec.c, -D_X86EMU)
SpecialObjectRule(xf86int10.o, xf86int10.c, -D_X86EMU -DSHOW_ALL_DEVICES)
SpecialObjectRule(generic.o, generic.c, -D_X86EMU)
SpecialObjectRule(xf86x86emu.o, xf86x86emu.c, -D_X86EMU)
BuildObjectFromLibraryWithPath(X86EMU_LIBPATH,x86emu,x86emu)
#endif
#endif

#if defined(XF86INT10_BUILD) && (XF86INT10_BUILD == X86VM)

SRCS = $(SRCS1) linux.c
OBJS = $(OBJS1) linux.o
SpecialObjectRule(pci.o, pci.c, -D_VM86_LINUX)
SpecialObjectRule(helper_exec.o, helper_exec.c, -D_VM86_LINUX)
SpecialObjectRule(xf86int10.o, xf86int10.c, -D_VM86_LINUX -DSHOW_ALL_DEVICES)
SpecialObjectRule(linux.o, linux.c, -D_VM86_LINUX)

#elif (XF86INT10_BUILD == X86EMU_OS)

SpecialObjectRule(pci.o, pci.c, -D_X86EMU)
SpecialObjectRule(helper_exec.o, helper_exec.c, -D_X86EMU)
SpecialObjectRule(xf86int10.o, xf86int10.c, -D_X86EMU -DSHOW_ALL_DEVICES)
SpecialObjectRule(linux.o, linux.c, -D_X86EMU)

X86TOPDIR = $(TOP)/extras/x86emu
X86SRCDIR = $(X86TOPDIR)/src/x86emu
X86EMUINCLUDES = -I$(X86TOPDIR)/include -I$(X86SRCDIR)

# if !defined(X86EMU_LIBPATH) 
X86EMUSRCS = debug.c decode.c fpu.c ops.c ops2.c prim_ops.c sys.c
X86EMUOBJS = debug.o decode.o fpu.o ops.o ops2.o prim_ops.o sys.o

LinkSourceFile(debug.c,$(X86SRCDIR))
LinkSourceFile(decode.c,$(X86SRCDIR))
LinkSourceFile(fpu.c,$(X86SRCDIR))
LinkSourceFile(ops.c,$(X86SRCDIR))
LinkSourceFile(ops2.c,$(X86SRCDIR))
LinkSourceFile(prim_ops.c,$(X86SRCDIR))
LinkSourceFile(sys.c,$(X86SRCDIR))
# else
BuildObjectFromLibraryWithPath(X86EMU_LIBPATH,x86emu,x86emu)
X86EMUOBJS = x86emu.o
# endif 

SRCS = $(SRCS1) xf86x86emu.c linux.c $(X86EMUSRCS)
OBJS = $(OBJS1) xf86x86emu.o linux.o $(X86EMUOBJS)

#endif

#if defined(XF86INT10_BUILD) && XF86INT10_BUILD > X86EMU_GENERIC

LibraryModuleTarget(int10, $(OBJS),linux)

InstallLibraryModule(int10,$(MODULEDIR),linux)

all::
	@(set -x; cd ../..; \
	RemoveFile(LibraryTargetName(int10)); \
	$(LN) linux/int10/LibraryTargetName(int10) . )

InstallDriverSDKLibraryModule(int10,$(DRIVERSDKMODULEDIR),.)

InstallDriverSDKNonExecFile(../../int10/xf86int10.h,$(DRIVERSDKINCLUDEDIR))

#endif

DependTarget()

