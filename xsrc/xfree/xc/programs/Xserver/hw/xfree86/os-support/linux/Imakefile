XCOMM $XFree86: xc/programs/Xserver/hw/xfree86/os-support/linux/Imakefile,v 3.53 2005/03/01 03:48:54 dawes Exp $
/*
 * Copyright (c) 1994-2004 by The XFree86 Project, Inc.
 * All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject
 * to the following conditions:
 *
 *   1.  Redistributions of source code must retain the above copyright
 *       notice, this list of conditions, and the following disclaimer.
 *
 *   2.  Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer
 *       in the documentation and/or other materials provided with the
 *       distribution, and in the same place and form as other copyright,
 *       license and disclaimer information.
 *
 *   3.  The end-user documentation included with the redistribution,
 *       if any, must include the following acknowledgment: "This product
 *       includes software developed by The XFree86 Project, Inc
 *       (http://www.xfree86.org/) and its contributors", in the same
 *       place and form as other third-party acknowledgments.  Alternately,
 *       this acknowledgment may appear in the software itself, in the
 *       same form and location as other such third-party acknowledgments.
 *
 *   4.  Except as contained in this notice, the name of The XFree86
 *       Project, Inc shall not be used in advertising or otherwise to
 *       promote the sale, use or other dealings in this Software without
 *       prior written authorization from The XFree86 Project, Inc.
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE XFREE86 PROJECT, INC OR ITS CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
 * OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
 * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
 * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <Server.tmpl>

#if BuildXInputExt
# if JoystickSupport
	JOYSTICK_SRC = lnx_jstk.c
# endif
# if DoLoadableServer
SHARED_CFLAGS = PositionIndependentCFlags
# else
#  if JoystickSupport
	JOYSTICK_OBJ = lnx_jstk.o
#  endif
# endif
#endif

#if HasMTRRSupport
MTRRDEFINES = -DHAS_MTRR_SUPPORT
#endif

DRI_SRC = sigio.c
DRI_OBJ = sigio.o

MOUSESRC = lnx_mouse.c
MOUSEOBJ = lnx_mouse.o

KBDSRC = lnx_kbd.c lnx_KbdMap.c at_scancode.c
KBDOBJ = lnx_kbd.o lnx_KbdMap.o at_scancode.o 

#if defined(i386Architecture) || defined(ia64Architecture) || defined(AMD64Architecture)
RES_SRCS=stdResource.c
RES_OBJS=stdResource.o
#else
RES_SRCS=lnxResource.c
RES_OBJS=lnxResource.o
#endif

#if defined(AlphaArchitecture)
AXP_SRC=lnx_ev56.c xf86Axp.c lnx_axp.c lnx_pci.c
AXP_OBJ=lnx_ev56.o xf86Axp.o lnx_axp.o lnx_pci.o
#endif

SRCS = lnx_init.c lnx_video.c lnx_io.c libc_wrapper.c bios_mmap.c \
       VTsw_usl.c std_kbdEv.c posix_tty.c $(MOUSESRC) \
       vidmem.c lnx_apm.c $(JOYSTICK_SRC) $(DRI_SRC) $(RES_SRCS) \
       $(AXP_SRC) lnx_kmod.c lnx_agp.c $(KBDSRC) /*wcHelper.c*/

OBJS = lnx_init.o lnx_video.o lnx_io.o libc_wrapper.o bios_mmap.o \
       VTsw_usl.o std_kbdEv.o posix_tty.o $(MOUSEOBJ) \
       vidmem.o lnx_apm.o $(JOYSTICK_OBJ) $(DRI_OBJ) $(RES_OBJS) \
       $(AXP_OBJ) lnx_kmod.o lnx_agp.o $(KBDOBJ) /*wcHelper.o*/

INCLUDES = -I$(XF86COMSRC) -I$(XF86OSSRC) -I. -I$(SERVERSRC)/include \
           -I$(XINCLUDESRC) -I$(EXTINCSRC) -I$(XF86OSSRC)/shared \
	   -I$(DRMINCLUDESDIR)

RESDEFINES = -DUSESTDRES

DEFINES = $(MTRRDEFINES) $(RESDEFINES)

#if defined(AlphaArchitecture)
SpecialObjectRule(lnx_ev56.o, lnx_ev56.c, -mcpu=ev56)
#endif

SubdirLibraryRule($(OBJS))
NormalLibraryObjectRule()

#if BuildXF86DRI
DRISUBDIR = drm
#endif
TESTVAR = XF86INT10_BUILD

#if XF86INT10_BUILD > X86EMU_GENERIC
INT10SUBDIR = int10
#endif 

#if BuildXF86DRI || (XF86INT10_BUILD > X86EMU_GENERIC)
#define IHaveSubdirs
SUBDIRS = $(DRISUBDIR) $(INT10SUBDIR)
#endif

#ifdef IHaveSubdirs
MakeSubdirs($(SUBDIRS))
DependSubdirs($(SUBDIRS))
#endif

#if BuildXInputExt
# if DoLoadableServer
#  if JoystickSupport
AllTarget(lnx_jstk.o)
#if 0
InstallDynamicModule(lnx_jstk.o,$(MODULEDIR),input)
#endif
#  endif
# endif
#endif

LinkSourceFile(bios_mmap.c,../shared)
LinkSourceFile(std_kbdEv.c,../shared)
LinkSourceFile(at_scancode.c,../shared)
LinkSourceFile(posix_tty.c,../shared)
LinkSourceFile(libc_wrapper.c,../shared)
LinkSourceFile(vidmem.c,../shared)
LinkSourceFile(VTsw_usl.c,../shared)
LinkSourceFile(kmod_noop.c,../shared)

LinkSourceFile($(DRI_SRC),../shared)

#if defined(i386Architecture) || defined(ia64Architecture) || defined (AMD64Architecture)
LinkSourceFile(stdResource.c,../shared)
#endif
#if defined(AlphaArchitecture)
LinkSourceFile(xf86Axp.c,../shared)
#endif
DependTarget()

InstallDriverSDKNonExecFile(agpgart.h,$(DRIVERSDKINCLUDEDIR)/linux)
#if 0
InstallDriverSDKDynamicModule(lnx_jstk.o,$(DRIVERSDKMODULEDIR))
#endif
