XCOMM $XFree86: xc/programs/Xserver/hw/dmx/config/Imakefile,v 1.3 2005/02/07 01:38:24 tsi Exp $

#include <Server.tmpl>

YFLAGS = -d

LIBSRCS = parser.c scanner.c dmxparse.c dmxprint.c dmxcompat.c dmxconfig.c
LIBOBJS = parser.o scanner.o dmxparse.o dmxprint.o dmxcompat.o dmxconfig.o

CONFIGSRCS = xdmxconfig.c dmxlog.c Canvas.c
CONFIGOBJS = xdmxconfig.o dmxlog.o Canvas.o

COMPATSRCS = vdltodmx.c
COMPATOBJS = vdltodmx.o

TESTSRCS = dmxtodmx.c
TESTOBJS = dmxtodmx.o

SRCS = $(LIBSRCS) $(CONFIGSRCS) $(COMPATSRCS) $(TESTSRCS)
OBJS = $(LIBOBJS) $(CONFIGOBJS) $(COMPATOBJS) $(TESTOBJS)

EXES = xdmxconfig vdltodmx dmxtodmx

LOCAL_LIBRARIES = -L. -ldmxconfig

#include <dmx.cf>

INCLUDES = -I. -I.. -I$(XBUILDINCDIR) -I$(FONTINCSRC) -I../../../mi \
	-I../../../include -I../../../render -I$(EXTINCSRC)

DEFINES = $(OS_DEFINES) $(EXT_DEFINES) -DDMX_LOG_STANDALONE $(DMX_DEFINES)

all::

LexFile(scanner)
YaccFile(parser,$(YFLAGS))

NormalLibraryObjectRule()
NormalLibraryTarget(dmxconfig,$(LIBOBJS))

NormalProgramTarget(xdmxconfig,$(CONFIGOBJS),\
	 	    libdmxconfig.a XawClientDepLibs $(DEPXTOOLLIB),\
	            $(LOCAL_LIBRARIES) XawClientLibs $(XTOOLLIB),NullParameter)
AllTarget(ProgramTargetName(xdmxconfig))
InstallProgram(xdmxconfig,$(BINDIR))

NormalProgramTarget(vdltodmx,$(COMPATOBJS),libdmxconfig.a,\
                    $(LOCAL_LIBRARIES),NullParameter)
AllTarget(ProgramTargetName(vdltodmx))
InstallProgram(vdltodmx,$(BINDIR))

NormalProgramTarget(dmxtodmx,$(TESTOBJS),libdmxconfig.a,\
                    $(LOCAL_LIBRARIES),NullParameter)
AllTarget(ProgramTargetName(dmxtodmx))
InstallProgram(dmxtodmx,$(BINDIR))

LinkSourceFile(dmxlog.c,..)

InstallManPage(dmxtodmx,$(MANDIR))
InstallManPage(vdltodmx,$(MANDIR))
InstallManPage(xdmxconfig,$(MANDIR))

DependTarget()

test: $(EXES)
	@for i in test-*.in; do \
		b=`echo $$i | sed 's,.in$$,,'` \
		export b; \
		(./dmxtodmx < $$i > $$b.tmp 2>&1; exit 0); \
		if cmp -s ./$$b.out ./$$b.tmp; \
			then echo PASSED $$b; rm -f $$b.tmp; \
			else echo "FAILED $$b **********"; \
		fi \
	done

test-update:
	@for i in test-*.in; do \
		b=`echo $$i | sed 's,.in$$,,'` \
		export b; \
		echo Writing $$b.out; \
		(./dmxtodmx < $$i > $$b.out 2>&1; exit 0) \
	done
